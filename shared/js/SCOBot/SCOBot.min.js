/*global $, JQuery, scorm, window */
/*jslint devel: true, browser: true, regexp: true */
/**
 * This is a sample SCORM Startup sequence and handicap API's for ease of use.
 * General Concept: When the LMS connects, call var SB = new SCOBot();
 * SCOBot
 * This only works with the SCORM_API, but has the basis to work with other API's.
 * Several public API's will call one to many SCORM Calls and this will make every attempt to
 * do common SCORM Tasks or boil down SCORM tasks into a smaller easy to use method.
 * Mode: {get} Browse, Review, Normal
 * Bookmark: {get/set} SCO Progress
 * Suspend Data: {get/set} Suspend Data Object
 * Interactions: {set} Interaction(s)
 * Objectives: {set} Objective(s)
 *
 * JSLint recently complained about  tabs.  Switched to spaces.
 *
 * https://github.com/cybercussion/SCOBot
 * @author Mark Statkus <mark@cybercussion.com>
 * @license Copyright (c) 2009-2014, Cybercussion Interactive LLC
 * As of 3.0.0 this code is under a Creative Commons Attribution-ShareAlike 4.0 International License.
 * @requires scorm, JQuery
 * @version 3.0.0
 * @param options {Object} override default values
 * @constructor
 */
/*!
 * SCOBot, Updated January 3rd, 2014
 * Copyright (c) 2009-2013, Cybercussion Interactive LLC. All rights reserved.
 * As of 3.0.0 this code is under a Creative Commons Attribution-ShareAlike 4.0 International License.
 */
function SCOBot(a){"use strict";function j(){return d=scorm.initialize(),scorm.debug(c.prefix+": SCO Loaded from window.onload "+d,4),d&&(i.start(),$(i).triggerHandler({type:"load"})),d}function k(){if(scorm.debug("SCO is being asked, *cough* forced to exit ...",3),f){switch($(i).triggerHandler({type:"unload"}),scorm.get("exit_type")){case"finish":i.finish();break;case"suspend":i.suspend();break;case"timeout":i.timeout();break;default:scorm.debug(c.prefix+": unknown exit type",2)}scorm.debug(c.prefix+": SCO is done unloading.",4),f=!1}return!0}function l(a){return scorm.debug(h[a],2),!0}function m(a){$(i).triggerHandler({type:"exception",error:a})}function n(){var a=scorm.getvalue("cmi.success_status");return!("passed"!==a&&"failed"!==a)}function o(){var a=scorm.getvalue("cmi.success_status");"passed"===a&&"finish"===scorm.get("exit_type")&&"false"===scorm.getvalue("cmi.score.scaled")&&"1"===scorm.getvalue("cmi.score.max")&&scorm.setvalue("cmi.score.scaled","1")}function p(a){return g.indexOf("|"+a+"|")>=0}function q(a){var b=/[^\f\r\n\t\v\0\s\S\w\W\d\D\b\\B\\cX\\xhh\\uhhh]/gi;return a.replace(b,"")}function r(a){var b;switch(scorm.get("time_type")){case"UTC":b=/^(\d{4})-0?(\d+)-0?(\d+)[T ]0?(\d+):0?(\d+):0?(\d+)(?:\.(\d+))(|Z)$/;break;case"GMT":b=/^(\d{4})-0?(\d+)-0?(\d+)[T ]0?(\d+):0?(\d+):0?(\d+)(?:\.(\d+))[\+\-]\d{2}:\d{2}$/;break;default:b=/^(\d{4})-0?(\d+)-0?(\d+)[T ]0?(\d+):0?(\d+):0?(\d+)$/}return b.test(a)}function s(a){var b=/^(?:P)([^T]*)(?:T)?(.*)?$/;return b.test(a)}function t(){return scorm.debug(c.prefix+": You didn't call 'start()' yet, or you already terminated, ignoring.",2),"false"}function u(){return(new Date).getTime()}function v(a,b){var c=parseFloat(a);return parseFloat(c.toPrecision(b))}function w(a,b){var d=0;switch(a){case"order_matters":d=/^\{order_matters=.*?\}/;break;case"case_matters":d=/^\{case_matters=.*?\}/;break;case"lang":d=/^\{lang=.*?\}/;break;default:scorm.debug(c.prefix+": Sorry, this is not a valid Response type.",1)}return d.exec(b)}function x(){scorm.debug("Times Up!");var a=scorm.getvalue("cmi.time_limit_action").split(","),b=!("message"!==a[1]);b&&$(i).triggerHandler({type:"message",text:"Time Limit Exceeded"}),scorm.set("exit_type","timeout"),"exit"===a[0]?k():$(i).triggerHandler({type:"continue"})}function y(a,b){var i,j,d="",e="",f=0,g=[],h=[];switch(a){case"true-false":return b=b.toString(),"true"===b||"false"===b?b:(scorm.debug(c.prefix+": Developer, you're not passing true or false for true-false.  I got "+b+" instead",1),"");case"choice":case"sequencing":if($.isArray(b)){j=0,b.length>36&&c.scorm_strict&&(scorm.debug(c.prefix+": Developer, you're passing a sum of values that exceeds SCORM's limit of 36 for this pattern.",2),b=b.slice(0,36));for(j in b)b.hasOwnProperty(j)&&b[j].length>10&&c.scorm_strict&&(scorm.debug(c.prefix+": Developer, you're passing values that exceed SCORM's limit of 10 characters.  Yours have "+b[j].length+". I will truncate this as not to lose data.",2),b[j]=b[j].substring(0,10));d=b.join("[,]"),b=d}else scorm.debug(c.prefix+": Developer, you're not passing a array type for sequencing/choice.  I got "+typeof b+" instead\n"+JSON.stringify(b),1),b="";return b;case"fill-in":return $.isPlainObject(b)?(void 0!==b.case_matters&&(d+="{case_matters="+b.case_matters+"}"),void 0!==b.order_matters&&(d+="{order_matters="+b.order_matters+"}"),void 0!==b.lang&&(d+="{lang="+b.lang+"}"),d+=b.words.join("[,]"),b=d):(scorm.debug(c.prefix+": Developer, you're not passing a object type for fill in.  I got "+typeof b+" instead",1),b=""),b;case"long-fill-in":return $.isPlainObject(b)?(void 0!==b.case_matters&&(d+="{case_matters="+b.case_matters+"}"),void 0!==b.lang&&(d+="{lang="+b.lang+"}"),d+=b.text,b=d):(scorm.debug(c.prefix+": Developer, you're not passing a object type for long fill in.  I got "+typeof b+" instead",1),b=""),b;case"matching":if($.isArray(b)){for(i=b.length,f=0;i>f;f+=1){if(!$.isArray(b[f]))return scorm.debug(c.prefix+": Developer, you're not passing a array type for matching/performance.  I got "+typeof b+" instead",1),"";g.push(b[f].join("[.]"))}d=g.join("[,]"),b=d}else scorm.debug(c.prefix+": Developer, you're not passing a array type for matching/performance.  I got "+typeof b+" instead",1),b="";return b;case"performance":if($.isArray(b)){for(i=b.length,f=0;i>f;f+=1){if(!$.isArray(b[f]))return scorm.debug(c.prefix+": Developer, you're not passing a array type for performance learner response.  I got "+typeof b[f]+" instead on "+f,1),scorm.debug(b,1),"";g.push(b[f].join("[.]"))}d=g.join("[,]")}else if(void 0!==b.order_matters&&(d+="{order_matters="+b.order_matters+"}"),$.isArray(b.answers)){for(i=b.answers.length,f=0;i>f;f+=1){if(!$.isArray(b.answers[f]))return scorm.debug(c.prefix+": Developer, you're not passing a array type for performance correct response.  I got "+typeof b.answers[f]+" instead on "+f,1),scorm.debug(b,1),"";$.isPlainObject(b.answers[f][1])&&(h=[v(b.answers[f][1].min,7),v(b.answers[f][1].max,7)],e=h.join("[:]"),b.answers[f][1]=e),g.push(b.answers[f].join("[.]"))}d+=g.join("[,]")}else scorm.debug(c.prefix+": Developer, you're not passing a array type for performance correct response.  I got "+typeof b.answers+" instead",1),scorm.debug(b,1);return b=d;case"numeric":return"number"==typeof b?d=b.toString():$.isPlainObject(b)?(g=[v(b.min,7),v(b.max,7)],d=g.join("[:]")):(d=parseFloat(b),"NaN"===d&&scorm.debug(c.prefix+": Developer, your not passing a number for a numeric interaction.  I got "+b+" instead",1),d+=""),d;case"likert":case"other":return b.toString();default:return scorm.debug(c.prefix+": Sorry, invalid interaction type detected for "+a+" on "+b,1),!1}}function z(a,b){var g,d=0,e=[],f={},h=!1;switch(a){case"true-false":return b;case"choice":case"sequencing":return e=b.split("[,]"),b=e;case"fill-in":return e=w("case_matters",b),null!==e&&-1!==e[0].search(/^\{case_matters=(true|false)\}$/)&&(f.case_matters=e[0].substring("{case_matters=".length,e[0].length-1),b=b.substring(e[0].length,b.length),scorm.debug("=== case matters"+b,4)),e=w("order_matters",b),null!==e&&-1!==e[0].search(/^\{order_matters=(true|false)\}$/)&&(f.order_matters=e[0].substring("{order_matters=".length,e[0].length-1),b=b.substring(e[0].length,b.length),scorm.debug("=== order matters"+b,4)),e=w("lang",b),null!==e&&-1!==e[0].search(/^\{lang=.*?\}$/)&&(f.lang=e[0].substring("{lang=".length,e[0].length-1),b=b.substring(e[0].length,b.length)),f.words=b.split("[,]"),f;case"long-fill-in":return e=w("case_matters",b),null!==e&&-1!==e[0].search(/^\{case_matters=(true|false)\}$/)&&(f.case_matters=e[0].substring("{case_matters=".length,e[0].length-1),b=b.substring(e[0].length,b.length),scorm.debug("=== case matters"+b,4)),e=w("lang",b),null!==e&&-1!==e[0].search(/^\{lang=.*?\}$/)&&(f.lang=e[0].substring("{lang=".length,e[0].length-1),b=b.substring(e[0].length,b.length)),f.text=b,f;case"matching":for(e=b.split("[,]"),g=e.length,d=0;g>d;d+=1)e[d]=e[d].split("[.]");return e;case"performance":for(e=w("order_matters",b),null!==e&&-1!==e[0].search(/^\{order_matters=(true|false)\}$/)&&(h=!0,f.order_matters=e[0].substring("{order_matters=".length,e[0].length-1),b=b.substring(e[0].length,b.length),scorm.debug("=== order matters"+b,4)),e=b.split("[,]"),g=e.lengh,d=0;g>d;d+=1)e[d]=e[d].split("[.]");return h?(f.answers=e,f):e;case"numeric":case"likert":case"other":return b;default:return scorm.debug(c.prefix+": Sorry, invalid interaction type detected for "+a+" on "+b,1),!1}}function A(){var a;return a=scorm.setvalue("cmi.suspend_data",q(JSON.stringify(c.suspend_data))),"true"===a?(scorm.debug(c.prefix+": Suspend Data saved",4),scorm.debug(c.suspend_data,4),"true"):"false"}function B(){if(f){var e,i,a=0,b=0,d=1,g=0,h=0;if(0===c.totalInteractions||0===c.totalObjectives)return scorm.debug(c.prefix+": Sorry, I cannot calculate Progress as the totalInteractions and or Objectives are zero",2),"false";if(i=parseInt(scorm.getvalue("cmi.objectives._count"),10),scorm.debug(c.prefix+" Count is "+i),i>0)for(i-=1,h=i;h>=0;h-=1)b=parseFloat(scorm.getvalue("cmi.objectives."+h+".score.raw")),scorm.debug("Score Raw: "+b),isNaN(b)?scorm.debug(c.prefix+" We got a NaN converting objectives."+h+".score.raw",2):a+=parseFloat(b),"completed"===scorm.getvalue("cmi.objectives."+h+".completion_status")&&(g+=1);return scorm.debug(c.prefix+" Setting score "+scorm.setvalue("cmi.score.raw",a.toString())),0===c.scoreMax-c.scoreMin?(scorm.debug(c.prefix+": Division by Zero for scoreMax - scoreMin "+c.scoreMax,2),scorm.setvalue("cmi.score.scaled",d)):(d=((a-c.scoreMin)/(c.scoreMax-c.scoreMin)).toString(),scorm.debug(c.prefix+": Score Scaled = "+d,3),scorm.setvalue("cmi.score.scaled",v(d,7))),e=(g/c.totalObjectives).toString(),scorm.setvalue("cmi.progress_measure",v(e,7)),c.completion_status=parseFloat(e)>=parseFloat(c.completion_threshold)?"completed":"incomplete",scorm.setvalue("cmi.completion_status",c.completion_status),c.success_status=parseFloat(d)>=parseFloat(c.scaled_passing_score)?"passed":"failed",scorm.setvalue("cmi.success_status",c.success_status),{score_scaled:scorm.getvalue("cmi.score.scaled"),success_status:scorm.getvalue("cmi.success_status"),progress_measure:scorm.getvalue("cmi.progress_measure"),completion_status:scorm.getvalue("cmi.completion_status")}}return t()}function C(){if(f){var e,a="cmi.comments_from_lms.",b=scorm.getvalue(a+"_count"),c=[],d={};if(!p(b))return"false";for(b-=1,e=0;b>=e;e+=1)a+=e+".",d.comment=scorm.getvalue(a+"comment"),d.location=scorm.getvalue(a+"location"),d.timestamp=scorm.getvalue(a+"timestamp"),c.push(d),d={};return c}return t()}function D(){o(),n()||scorm.setvalue("cmi.success_status","unknown"),"passed"===scorm.get("success_status")&&scorm.setvalue("cmi.success_status","passed"),"completed"!==scorm.getvalue("cmi.completion_status")&&scorm.setvalue("cmi.completion_status","incomplete"),"completed"===scorm.get("completion_status")&&scorm.setvalue("cmi.completion_status","completed")}var b={version:"3.0.0",createDate:"04/07/2011 09:33AM",modifiedDate:"01/03/2014 12:16PM",prefix:"SCOBot",launch_data:{},interaction_mode:"state",launch_data_type:"querystring",initiate_timer:!0,scorm_strict:!0,scorm_edition:"3rd",success_status:"unknown",location:"",completion_status:"",suspend_data:{pages:[]},mode:"",completion_threshold:0,scaled_passing_score:.7,max_time_allowed:"",totalInteractions:0,totalObjectives:0,startTime:0},c=$.extend(b,a),d=!1,e=!1,f=!1,g="|null|undefined|false|NaN|| |",h=scorm.get("error"),i=this;this.start=function(){var a="",b="",d="";if(scorm.debug(c.prefix+": I am starting...",3),f)return scorm.debug(c.prefix+": You already called start!  I don't see much point in doing this more than once.",2),!1;if(f=!0,c.startTime=u(),d=scorm.getvalue("cmi.launch_data"),"json"===c.launch_data_type?c.launch_data=JSON.parse(d):d.replace(new RegExp("([^?=&]+)(=([^&]*))?","g"),function(a,b,d,e){c.launch_data[b]=e}),scorm.debug(c.prefix+": Launch Data:",4),scorm.debug(c.launch_data,4),c.mode=scorm.getvalue("cmi.mode"),c.entry=scorm.getvalue("cmi.entry"),"review"===c.mode||""===c.entry||"resume"===c.entry)if(c.location=scorm.getvalue("cmi.location"),c.suspend_data=scorm.getvalue("cmi.suspend_data"),c.suspend_data.length>0&&!p(c.suspend_data)){scorm.debug(c.prefix+": Returning suspend data object from a prior session",4);try{setting.suspend_data=JSON.parse(c.suspend_data),scorm.debug(c.suspend_data,4)}catch(e){scorm.debug(c.prefix+": Unable to parse suspend_data to a JSON object; returning suspend_data as is",4)}""===c.entry&&(c.entry="resume")}else scorm.debug(c.prefix+": Creating new suspend data object",4);else scorm.debug(c.prefix+": First time running this SCO based on LMS entry value.",4),scorm.debug(c.prefix+": Creating new suspend data object",4);return a=scorm.getvalue("cmi.completion_threshold"),p(a)||"-1"===a||(c.completion_threshold=a),b=scorm.getvalue("cmi.scaled_passing_score"),p(b)||"-1"===b||(c.scaled_passing_score=b),c.completion_status=scorm.getvalue("cmi.completion_status"),c.success_status=scorm.getvalue("cmi.success_status"),c.comments_from_lms=C(),"false"!==c.comments_from_lms&&$(i).triggerHandler({type:"comments_lms",data:c.comments_from_lms}),c.max_time_allowed=scorm.getvalue("cmi.max_time_allowed"),s(c.max_time_allowed)?c.initiate_timer&&(scorm.debug(c.prefix+": This SCO has a set time, I am starting the timer for "+c.max_time_allowed+"..."),i.startTimer()):scorm.debug(c.prefix+": This is not ISO8601 time duration. "+c.max_time_allowed),!0},this.setTotals=function(a){return f?(p(a.totalInteractions)||(c.totalInteractions=a.totalInteractions),p(a.totalObjectives)||(c.totalObjectives=a.totalObjectives),p(a.scoreMin)||(c.scoreMin=v(a.scoreMin,7),scorm.setvalue("cmi.score.min",a.scoreMin.toString())),p(a.scoreMax)||(c.scoreMax=v(a.scoreMax,7),scorm.setvalue("cmi.score.max",a.scoreMax.toString())),"true"):t()},this.startTimer=function(){var a=10*scorm.ISODurationToCentisec(c.max_time_allowed);setTimeout(x,a)},this.debug=scorm.debug,this.getValue=scorm.getvalue,this.setValue=scorm.setvalue,this.getMode=function(){return f?c.mode:t()},this.getEntry=function(){return f?c.entry:t()},this.setBookmark=function(a){return f?(c.location=a.toString(),scorm.setvalue("cmi.location",c.location)):t()},this.getBookmark=function(){return f?c.location:t()},this.progress=B,this.setSuspendDataByPageID=function(a,b,d){if(f){var e,g=c.suspend_data.pages.length;for(e=0;g>e;e+=1)if(c.suspend_data.pages[e].id===a)return c.suspend_data.pages[e].data=d,scorm.debug(c.prefix+": Suspend Data Set",4),scorm.debug(c.suspend_data,4),A();return c.suspend_data.pages.push({id:a,title:b,data:d}),scorm.debug(c.prefix+": Suspend Data set:",4),scorm.debug(c.suspend_data,4),A()}return t()},this.getSuspendDataByPageID=function(a){if(f){var b,d=c.suspend_data.pages.length;for(b=0;d>b;b+=1)if(c.suspend_data.pages[b].id===a)return c.suspend_data.pages[b].data;return"false"}return t()},this.getSecondsFromStart=function(){return c.startTime-u()},this.setInteraction=function(a){if(f){var b,d,e,g,h,j,l,m,n,o,q,i="cmi.interactions.",k=a.timestamp||scorm.isoStringToDate(scorm.getvalue(i+scorm.getInteractionByID(a.id)+".timestamp"));if(!$.isPlainObject(a))return scorm.debug(c.prefix+": Developer, your not passing a {object} argument!!  Got "+typeof a+" instead.",1),"false";if(p(a.id)){scorm.debug(c.prefix+": Developer, your passing a interaction without a ID\nSee question:\n"+a.description,1);for(q in a)a.hasOwnProperty(q)&&scorm.debug("key: "+q+"\n value: "+a[q]);return"false"}if("date"===$.type(a.timestamp)){var r=a.timestamp.toISOString();l=r.substr(0,21)+"Z"}if(a.timestamp=l,"date"===$.type(a.latency)?(m=(a.latency.getTime()-k.getTime())/1e3,a.latency=scorm.centisecsToISODuration(100*m,!0)):a.learner_response.length>0&&!p(a.learner_response)&&(a.latency=new Date,m=(a.latency.getTime()-k.getTime())/1e3,a.latency=scorm.centisecsToISODuration(100*m,!0)),j="_count","journaled"===c.interaction_mode?b="-1"===scorm.getvalue(i+j)?"0":scorm.getvalue(i+j):(b=scorm.getInteractionByID(a.id),p(b)&&(b="-1"===scorm.getvalue(i+j)?"0":scorm.getvalue(i+j))),i+=b+".",p(a.id)||(n=scorm.setvalue(i+"id",a.id)),p(a.type)||(n=scorm.setvalue(i+"type",a.type)),j="objectives._count",void 0!==a.objectives)for(e=0;e<a.objectives.length;e+=1)d=scorm.getInteractionObjectiveByID(b,a.objectives[e].id),"false"===d&&(d="-1"===scorm.getvalue(i+j)?"0":scorm.getvalue(i+j)),n=scorm.setvalue(i+"objectives."+d+".id",a.objectives[e].id);if(void 0!==a.timestamp&&(n=scorm.setvalue(i+"timestamp",a.timestamp)),j="correct_responses._count",$.isArray(a.correct_responses))for(o=a.correct_responses.length,g=0;o>g;g+=1)h=scorm.getInteractionCorrectResponsesByPattern(b,a.correct_responses[g].pattern),scorm.debug(c.prefix+": Trying to locate pattern "+a.correct_responses[g].pattern+" resulted in "+h,4),"false"===h&&(h="-1"===scorm.getvalue(i+j)?0:scorm.getvalue(i+j),scorm.debug(c.prefix+": p is now "+h,4)),"match"===h?scorm.debug(c.prefix+": Developer, I've already added this correct response type '"+a.correct_responses[g].pattern+"'",2):n=scorm.setvalue(i+"correct_responses."+h+".pattern",y(a.type,a.correct_responses[g].pattern));else scorm.debug(c.prefix+": Something went wrong with Correct Responses, it wasn't an Array.",1);return p(a.weighting)||(n=scorm.setvalue(i+"weighting",a.weighting)),p(a.learner_response)||(n=scorm.setvalue(i+"learner_response",y(a.type,a.learner_response))),p(a.result)||(n=scorm.setvalue(i+"result",a.result)),p(a.latency)||(n=scorm.setvalue(i+"latency",a.latency)),p(a.description)||(n=scorm.setvalue(i+"description",a.description)),n}return t()},this.getInteraction=function(a){if(f){var b,d,e,i,j,k,l,c="cmi.interactions.",g=0,h={};if(b=scorm.getInteractionByID(a),"false"===b)return b;if(c+=b+".",h.id=a,h.type=scorm.getvalue(c+"type"),d=scorm.getvalue(c+"objectives._count"),i=scorm.getvalue(c+"timestamp"),j=scorm.getvalue(c+"latency"),k=r(i)?scorm.isoStringToDate(i):i,l=r(j)?scorm.isoStringToDate(j):j,h.objectives=[],"false"!==d)for(g=0;d>g;g+=1)h.objectives.push({id:scorm.getvalue(c+"objectives."+g+".id")});if(h.timestamp=k,e=scorm.getvalue(c+"correct_responses._count"),h.correct_responses=[],"false"!==e)for(g=0;e>g;g+=1)h.correct_responses.push({pattern:z(h.type,scorm.getvalue(c+"correct_responses."+g+".pattern"))});return h.weighting=scorm.getvalue(c+"weighting"),h.learner_response=z(h.type,scorm.getvalue(c+"learner_response")),h.result=scorm.getvalue(c+"result"),h.latency=l,h.description=scorm.getvalue(c+"description"),h}return t()},this.setObjective=function(a){if(f){var k,b="cmi.objectives.",d=scorm.getObjectiveByID(a.id),e="false",g=!1,h=": Passed no or bad ",i=" ignored.",j=scorm.setvalue;if(scorm.debug(c.prefix+": Setting Objective at "+d+" (This may be false)"),p(d)){if(d=scorm.getvalue(b+"_count"),"false"===d)return scorm.debug(c.prefix+": LMS is return false, can not proceed, check error codes"),d;scorm.debug(c.prefix+": Objective "+a.id+" was not found.  Adding new at "+d+" "+a.description),g=!0}if(b+=d+".",g){if(p(a.id)){scorm.debug(c.prefix+": You did not pass an objective ID!!  What I did get below:",1);for(k in a)a.hasOwnProperty(k)&&scorm.debug("key: "+k+"\n value: "+a[k]);return"false"}j(b+"id",a.id.toString())}return $.isPlainObject(a.score)?(e=p(a.score.scaled)?scorm.debug(c.prefix+h+b+"score.scaled: "+a.score.scaled+i,3):j(b+"score.scaled",v(a.score.scaled,7).toString()),e=p(a.score.raw)?scorm.debug(c.prefix+h+b+"score.raw: "+a.score.raw+i,3):j(b+"score.raw",v(a.score.raw,7).toString()),e=p(a.score.min)?scorm.debug(c.prefix+h+b+"score.min: "+a.score.min+i,3):j(b+"score.min",v(a.score.min,7).toString()),e=p(a.score.max)?scorm.debug(c.prefix+h+b+"score.max: "+a.score.max+i,3):j(b+"score.max",v(a.score.max,7).toString())):scorm.debug(c.prefix+": Did not receive a score object.  May or may not be an issue.",4),e=p(a.success_status)?scorm.debug(c.prefix+h+b+"success_status: "+a.success_status+i,3):j(b+"success_status",a.success_status),e=p(a.completion_status)?scorm.debug(c.prefix+h+b+"completion_status: "+a.completion_status+i,3):j(b+"completion_status",a.completion_status),e=p(a.progress_measure)?scorm.debug(c.prefix+h+b+"progress_measure: "+a.progress_measure+i,3):j(b+"progress_measure",a.progress_measure),e=p(a.description)?scorm.debug(c.prefix+h+b+"description: "+a.description+i,3):j(b+"description",a.description),scorm.debug(c.prefix+": Progress\n"+JSON.stringify(B(),null," "),4),e.toString()}return t()},this.getObjective=function(a){if(f){var b=scorm.getObjectiveByID(a),c="cmi.objectives.";return"false"===b?b:(c+=b+".",{id:scorm.getvalue(c+"id"),score:{scaled:scorm.getvalue(c+"score.scaled"),raw:scorm.getvalue(c+"score.raw"),min:scorm.getvalue(c+"score.min"),max:scorm.getvalue(c+"score.max")},success_status:scorm.getvalue(c+"success_status"),completion_status:scorm.getvalue(c+"completion_status"),progress_measure:scorm.getvalue(c+"progress_measure"),description:scorm.getvalue(c+"description")})}return t()},this.setCommentFromLearner=function(a,b,d){if(f){var e="cmi.comments_from_learner.",g=scorm.getvalue(e+"_count");return"false"===g?(scorm.debug(c.prefix+": Sorry, LMS returned a comments count of 'false'.  Review error logs."),g):((0===a.length||a.length>4e3)&&scorm.debug(c.prefix+": Sorry, message from learner was empty or exceeded the limit. Length:"+a.length,2),e+=g+".",scorm.setvalue(e+"comment",a),scorm.setvalue(e+"location",b),scorm.setvalue(e+"timestamp",scorm.isoDateToString(d)))}return t()},this.gradeIt=function(){var a=1,b=scorm.getvalue("cmi.score.raw"),d=scorm.getvalue("cmi.score.min"),e=scorm.getvalue("cmi.score.max"),f=scorm.getvalue("cmi.progress_measure");return 0===e-d?(scorm.debug(c.prefix+": Division by Zero for scoreMax - scoreMin "+e,2),scorm.setvalue("cmi.score.scaled",a)):(a=((b-d)/(e-d)).toString(),scorm.debug(c.prefix+": Score Scaled = "+a,3),scorm.setvalue("cmi.score.scaled",v(a,7))),c.completion_status=parseFloat(f)>=parseFloat(c.completion_threshold)?"completed":"incomplete",scorm.setvalue("cmi.completion_status",c.completion_status),c.success_status=parseFloat(a)>=parseFloat(c.scaled_passing_score)?"passed":"failed",scorm.setvalue("cmi.success_status",c.success_status),"true"},this.happyEnding=function(){return f?(scorm.setvalue("cmi.score.scaled","1"),scorm.setvalue("cmi.score.min","0"),scorm.setvalue("cmi.score.max","1"),scorm.setvalue("cmi.score.raw","1"),scorm.setvalue("cmi.success_status","passed"),scorm.setvalue("cmi.progress_measure","1"),scorm.setvalue("cmi.completion_status","completed")):t()},this.commit=function(){return f?scorm.commit(""):t()},this.suspend=function(){return f?(scorm.debug(c.prefix+": I am suspending...",3),scorm.setvalue("cmi.exit","suspend"),D(),f=!1,scorm.terminate()):t()},this.finish=function(){return f?(scorm.debug(c.prefix+": I am finishing...",3),scorm.setvalue("cmi.exit","normal"),D(),f=!1,scorm.terminate()):t()},this.timeout=function(){return f?(scorm.debug(c.prefix+": I am timing out...",3),scorm.setvalue("cmi.exit","time-out"),D(),f=!1,scorm.terminate()):t()},this.isISO8601=r,this.set=function(a,b){switch(a){case"version":case"createDate":case"modifiedDate":case"prefix":l(405);break;default:c[a]=b}return e===!1},this.get=function(a){return void 0===c[a]?(l(404),!1):c[a]},$(window).bind("load",j),$(window).bind("unload",k),$(scorm).on("exception",function(a){m(a.error)})}Date.prototype.toISOString||(Date.prototype.toJSON||(Date.prototype.toJSON=function(){function b(a){return 10>a?"0"+a:a}return this.getUTCFullYear()+"-"+b(this.getUTCMonth()+1)+"-"+b(this.getUTCDate())+"T"+b(this.getUTCHours())+":"+b(this.getUTCMinutes())+":"+b(this.getUTCSeconds())+"Z"}),Date.prototype.toISOString=Date.prototype.toJSON);